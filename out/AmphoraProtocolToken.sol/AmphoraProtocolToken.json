{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AmphoraProtocolToken_InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmphoraProtocolToken_InvalidSupply",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rawAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b506040516200314438038062003144833981016040819052620000359162000875565b6040518060400160405280601081526020016f105b5c1a1bdc9848141c9bdd1bd8dbdb60821b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601081526020016f105b5c1a1bdc9848141c9bdd1bd8dbdb60821b815250604051806040016040528060048152602001630829aa0960e31b8152508160039080519060200190620000d7929190620007d9565b508051620000ed906004906020840190620007d9565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200018c905033620001ea565b6001600160a01b038216620001b457604051634db425ed60e01b815260040160405180910390fd5b60008111620001d657604051631ec7acbf60e11b815260040160405180910390fd5b620001e282826200023c565b505062000938565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620002538282620002f160201b62000e381760201c565b6001600160601b036200026560025490565b1115620002d25760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b620002eb600962000f33620003c260201b1783620003d7565b50505050565b6001600160a01b038216620003495760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620002c9565b80600260008282546200035d9190620008c7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620003be600083836200056e565b5050565b6000620003d08284620008c7565b9392505050565b8254600090819081811562000437576200040687620003f8600185620008e2565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b031660208201526200044c565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506200046a84868860201c565b9250600082118015620004835750805163ffffffff1643145b15620004da576200049f83620005ba60201b62000f3f1760201c565b620004b188620003f8600186620008e2565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556200055f565b866040518060400160405280620004fc436200062960201b62000ff11760201c565b63ffffffff1681526020016200051d86620005ba60201b62000f3f1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620005868383836200056960201b620010871760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620005699291821691168362000690565b60006001600160e01b03821115620006255760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401620002c9565b5090565b600063ffffffff821115620006255760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401620002c9565b816001600160a01b0316836001600160a01b031614158015620006b35750600081115b1562000569576001600160a01b0383161562000740576001600160a01b038316600090815260086020908152604082208291620006fd9190620007cb901b6200108c1785620003d7565b91509150846001600160a01b031660008051602062003124833981519152838360405162000735929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161562000569576001600160a01b038216600090815260086020908152604082208291620007849190620003c2901b62000f331785620003d7565b91509150836001600160a01b0316600080516020620031248339815191528383604051620007bc929190918252602082015260400190565b60405180910390a25050505050565b6000620003d08284620008e2565b828054620007e790620008fc565b90600052602060002090601f0160209004810192826200080b576000855562000856565b82601f106200082657805160ff191683800117855562000856565b8280016001018555821562000856579182015b828111156200085657825182559160200191906001019062000839565b50620006259291505b808211156200062557600081556001016200085f565b600080604083850312156200088957600080fd5b82516001600160a01b0381168114620008a157600080fd5b6020939093015192949293505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620008dd57620008dd620008b1565b500190565b600082821015620008f757620008f7620008b1565b500390565b600181811c908216806200091157607f821691505b6020821081036200093257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161279c62000988600039600061162e0152600061167d01526000611658015260006115b1015260006115db01526000611605015261279c6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063d505accf11610071578063d505accf14610433578063dd62ed3e14610446578063f1127ed81461048c578063f2fde38b146104de57600080fd5b8063a9059cbb146103fa578063b4b5ea571461040d578063c3cda5201461042057600080fd5b80638e539e8c116100d35780638e539e8c146103b957806395d89b41146103cc5780639ab24eb0146103d4578063a457c2d7146103e757600080fd5b8063782d6fe1146103585780637ecebe00146103885780638da5cb5b1461039b57600080fd5b80633a46b1a8116101665780635c19a95c116101405780635c19a95c146102df5780636fcfff45146102f257806370a082311461031a578063715018a61461035057600080fd5b80633a46b1a81461025957806340c10f191461026c578063587cde1e1461028157600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f5780633644e5151461023e578063395093511461024657600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d16104f1565b6040516101de9190612377565b60405180910390f35b6101fa6101f5366004612413565b610583565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a36600461243d565b61059b565b604051601281526020016101de565b61020e6105bf565b6101fa610254366004612413565b6105ce565b61020e610267366004612413565b61061a565b61027f61027a366004612413565b6106c0565b005b6102ba61028f366004612479565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600760205260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101de565b61027f6102ed366004612479565b6106d6565b610305610300366004612479565b6106e3565b60405163ffffffff90911681526020016101de565b61020e610328366004612479565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61027f610718565b61036b610366366004612413565b61072c565b6040516bffffffffffffffffffffffff90911681526020016101de565b61020e610396366004612479565b610740565b600a5473ffffffffffffffffffffffffffffffffffffffff166102ba565b61020e6103c7366004612494565b61076b565b6101d16107e1565b61020e6103e2366004612479565b6107f0565b6101fa6103f5366004612413565b6108bb565b6101fa610408366004612413565b61098c565b61036b61041b366004612479565b61099a565b61027f61042e3660046124be565b6109a8565b61027f610441366004612516565b610b1f565b61020e610454366004612580565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61049f61049a3660046125b3565b610cde565b60408051825163ffffffff1681526020928301517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692810192909252016101de565b61027f6104ec366004612479565b610d84565b606060038054610500906125f3565b80601f016020809104026020016040519081016040528092919081815260200182805461052c906125f3565b80156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b600033610591818585611098565b5060019392505050565b6000336105a985828561124b565b6105b4858585611322565b506001949350505050565b60006105c9611597565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610591908290869061061590879061266f565b611098565b600043821061068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604090206106b990836116cb565b9392505050565b6106c86117ec565b6106d2828261186d565b5050565b6106e03382611923565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081526008602052604081205461071290610ff1565b92915050565b6107206117ec565b61072a60006119c1565b565b60006106b961073b848461061a565b611a38565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040812054610712565b60004382106107d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610681565b6107126009836116cb565b606060048054610500906125f3565b73ffffffffffffffffffffffffffffffffffffffff811660009081526008602052604081205480156108935773ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040902061084c600183612687565b8154811061085c5761085c61269e565b60009182526020909120015464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610896565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610681565b6105b48286868403611098565b600033610591818585611322565b600061071261073b836107f0565b83421115610a12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610681565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf602082015273ffffffffffffffffffffffffffffffffffffffff8816918101919091526060810186905260808101859052600090610a9990610a919060a00160405160208183030381529060405280519060200120611ad6565b858585611b3f565b9050610aa481611b67565b8614610b0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610681565b610b168188611923565b50505050505050565b83421115610b89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610681565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610bb88c611b67565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c2082611ad6565b90506000610c3082878787611b3f565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610681565b610cd28a8a8a611098565b50505050505050505050565b604080518082019091526000808252602082015273ffffffffffffffffffffffffffffffffffffffff83166000908152600860205260409020805463ffffffff8416908110610d2f57610d2f61269e565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16918101919091529392505050565b610d8c6117ec565b73ffffffffffffffffffffffffffffffffffffffff8116610e2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610681565b6106e0816119c1565b73ffffffffffffffffffffffffffffffffffffffff8216610eb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610681565b8060026000828254610ec7919061266f565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106d260008383611b9c565b60006106b9828461266f565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610681565b5090565b600063ffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610681565b505050565b60006106b98284612687565b73ffffffffffffffffffffffffffffffffffffffff831661113a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff82166111dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461131c578181101561130f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610681565b61131c8484848403611098565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166113c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff8216611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561151e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361131c848484611b9c565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156115fd57507f000000000000000000000000000000000000000000000000000000000000000046145b1561162757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156117255760006116e684611bdb565b6116f09085612687565b600088815260209020909150869082015463ffffffff16111561171557809150611723565b61172081600161266f565b92505b505b808210156117725760006117398383611cc3565b600088815260209020909150869082015463ffffffff16111561175e5780915061176c565b61176981600161266f565b92505b50611725565b80156117c15761179586611787600184612687565b600091825260209091200190565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166117c4565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610681565b6118778282610e38565b6002546bffffffffffffffffffffffff1015611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610681565b61131c6009610f3383611cde565b73ffffffffffffffffffffffffffffffffffffffff8281166000818152600760208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461131c828483611e86565b600a805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006bffffffffffffffffffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152608401610681565b6000610712611ae3611597565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611b508787878761202b565b91509150611b5d8161211a565b5095945050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090208054600181018255905b50919050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526007602052604080822054858416835291205461108792918216911683611e86565b600081600003611bed57506000919050565b60006001611bfa846122cd565b901c6001901b90506001818481611c1357611c136126cd565b048201901c90506001818481611c2b57611c2b6126cd565b048201901c90506001818481611c4357611c436126cd565b048201901c90506001818481611c5b57611c5b6126cd565b048201901c90506001818481611c7357611c736126cd565b048201901c90506001818481611c8b57611c8b6126cd565b048201901c90506001818481611ca357611ca36126cd565b048201901c90506106b981828581611cbd57611cbd6126cd565b04612361565b6000611cd260028484186126fc565b6106b99084841661266f565b82546000908190818115611d4057611cfb87611787600185612687565b60408051808201909152905463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020820152611d55565b60408051808201909152600080825260208201525b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169350611d8a84868863ffffffff16565b9250600082118015611da25750805163ffffffff1643145b15611dfc57611db083610f3f565b611dbf88611787600186612687565b80547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff909216919091179055611e7c565b866040518060400160405280611e1143610ff1565b63ffffffff168152602001611e2586610f3f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ec25750600081115b156110875773ffffffffffffffffffffffffffffffffffffffff831615611f775773ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604081208190611f179061108c85611cde565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611f6c929190918252602082015260400190565b60405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8216156110875773ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604081208190611fc790610f3385611cde565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161201c929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156120625750600090506003612111565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156120b6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661210a57600060019250925050612111565b9150600090505b94509492505050565b600081600481111561212e5761212e612737565b036121365750565b600181600481111561214a5761214a612737565b036121b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610681565b60028160048111156121c5576121c5612737565b0361222c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610681565b600381600481111561224057612240612737565b036106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610681565b600080608083901c156122e257608092831c92015b604083901c156122f457604092831c92015b602083901c1561230657602092831c92015b601083901c1561231857601092831c92015b600883901c1561232a57600892831c92015b600483901c1561233c57600492831c92015b600283901c1561234e57600292831c92015b600183901c156107125760010192915050565b600081831061237057816106b9565b5090919050565b600060208083528351808285015260005b818110156123a457858101830151858201604001528201612388565b818111156123b6576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461240e57600080fd5b919050565b6000806040838503121561242657600080fd5b61242f836123ea565b946020939093013593505050565b60008060006060848603121561245257600080fd5b61245b846123ea565b9250612469602085016123ea565b9150604084013590509250925092565b60006020828403121561248b57600080fd5b6106b9826123ea565b6000602082840312156124a657600080fd5b5035919050565b803560ff8116811461240e57600080fd5b60008060008060008060c087890312156124d757600080fd5b6124e0876123ea565b955060208701359450604087013593506124fc606088016124ad565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561253157600080fd5b61253a886123ea565b9650612548602089016123ea565b95506040880135945060608801359350612564608089016124ad565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561259357600080fd5b61259c836123ea565b91506125aa602084016123ea565b90509250929050565b600080604083850312156125c657600080fd5b6125cf836123ea565b9150602083013563ffffffff811681146125e857600080fd5b809150509250929050565b600181811c9082168061260757607f821691505b602082108103611b96577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561268257612682612640565b500190565b60008282101561269957612699612640565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612732577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212203a59e665fe203c2b776ed0b2f8b8a40187a21570cc776bcd8bee7f51534026d564736f6c634300080e0033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
    "sourceMap": "332:587:67:-:0;;;416:327;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1829:52:18;;;;;;;;;;;;;-1:-1:-1;;;1829:52:18;;;1868:4;2464:602:26;;;;;;;;;;;;;-1:-1:-1;;;2464:602:26;;;1976:113:13;;;;;;;;;;;;;-1:-1:-1;;;1976:113:13;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:13;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2065:17:13;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2550:22:26;;;;;;;2606:25;;;;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;;;-1:-1:-1;3642:73:26;;2660:117;3642:73;;;629:25:128;;;670:18;;;663:34;;;;-1:-1:-1;713:18:128;;706:34;;;;756:18;;;;749:34;;;;3709:4:26;799:19:128;;;792:61;;;3642:73:26;;;;;;;;;;601:19:128;;;;3642:73:26;;;3632:84;;;;;;;2905:85;;3000:28;;;;3038:21;;-1:-1:-1;936:32:10;;-1:-1:-1;719:10:22;936:18:10;:32::i;:::-;-1:-1:-1;;;;;558:22:67;::::2;554:72;;589:37;;-1:-1:-1::0;;;589:37:67::2;;;;;;;;;;;554:72;654:1;636:14;:19;632:68;;664:36;;-1:-1:-1::0;;;664:36:67::2;;;;;;;;;;;632:68;707:31;713:8:::0;723:14;707:5:::2;:31::i;:::-;416:327:::0;;332:587;;2433:187:10;2525:6;;;-1:-1:-1;;;;;2541:17:10;;;-1:-1:-1;;;;;;2541:17:10;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;6705:285:15:-;6789:28;6801:7;6810:6;6789:11;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;6835:13:15;3329:12:13;;;3242:106;6835:13:15;:29;;6827:90;;;;-1:-1:-1;;;6827:90:15;;1066:2:128;6827:90:15;;;1048:21:128;1105:2;1085:18;;;1078:30;1144:34;1124:18;;;1117:62;-1:-1:-1;;;1195:18:128;;;1188:46;1251:19;;6827:90:15;;;;;;;;;6928:55;6945:23;6970:4;;;;;6976:6;6928:16;:55::i;:::-;;;6705:285;;:::o;8567:535:13:-;-1:-1:-1;;;;;8650:21:13;;8642:65;;;;-1:-1:-1;;;8642:65:13;;1483:2:128;8642:65:13;;;1465:21:128;1522:2;1502:18;;;1495:30;1561:33;1541:18;;;1534:61;1612:18;;8642:65:13;1281:355:128;8642:65:13;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:13;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;2052:25:128;;;8999:37:13;;2025:18:128;8999:37:13;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9575:96:15:-;9633:7;9659:5;9663:1;9659;:5;:::i;:::-;9652:12;9575:96;-1:-1:-1;;;9575:96:15:o;8853:716::-;9085:12;;9023:17;;;;;9136:8;;:59;;9166:29;9180:5;9187:7;9193:1;9187:3;:7;:::i;:::-;10007:25;10067:21;;;10133:4;10120:18;;;10116:28;;9921:239;9166:29;9136:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9136:59:15;;;;;;;;9147:16;;;;;;;;;-1:-1:-1;9147:16:15;;;;;;;9136:59;9108:87;;9218:7;:13;;;-1:-1:-1;;;;;9206:25:15;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;-1:-1:-1;9299:17:15;;:33;;9320:12;9299:33;9288:44;9284:279;;;9386:29;9405:9;9386:18;;;;;:29;;:::i;:::-;9348;9362:5;9369:7;9375:1;9369:3;:7;:::i;9348:29::-;:67;;-1:-1:-1;;;;;9348:67:15;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;;;;;:31;;:::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;9457:94:15;;;;;;9446:106;;;;;;;-1:-1:-1;9446:106:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;12180:121:13:-;;;;:::o;7409:254:15:-;7546:43;7572:4;7578:2;7582:6;7546:25;;;;;:43;;:::i;:::-;-1:-1:-1;;;;;2318:19:15;;;2292:7;2318:19;;;:10;:19;;;;;;;;;;;;;;;7600:56;;2318:19;;;;;7649:6;7600:16;:56::i;2836:192:30:-;2893:7;-1:-1:-1;;;;;2920:26:30;;;2912:78;;;;-1:-1:-1;;;2912:78:30;;2420:2:128;2912:78:30;;;2402:21:128;2459:2;2439:18;;;2432:30;2498:34;2478:18;;;2471:62;-1:-1:-1;;;2549:18:128;;;2542:37;2596:19;;2912:78:30;2218:403:128;2912:78:30;-1:-1:-1;3015:5:30;2836:192::o;15264:187::-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:30;;2828:2:128;15338:76:30;;;2810:21:128;2867:2;2847:18;;;2840:30;2906:34;2886:18;;;2879:62;-1:-1:-1;;;2957:18:128;;;2950:36;3003:19;;15338:76:30;2626:402:128;8220:627:15;8347:3;-1:-1:-1;;;;;8340:10:15;:3;-1:-1:-1;;;;;8340:10:15;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;-1:-1:-1;;;;;8384:17:15;;;8380:221;;-1:-1:-1;;;;;8479:17:15;;8422;8479;;;:12;:17;;;;;;;8422;;8462:54;;8479:17;8498:9;;;;;8509:6;8462:16;:54::i;:::-;8421:95;;;;8560:3;-1:-1:-1;;;;;8539:47:15;-1:-1:-1;;;;;;;;;;;8565:9:15;8576;8539:47;;;;;;3207:25:128;;;3263:2;3248:18;;3241:34;3195:2;3180:18;;3033:248;8539:47:15;;;;;;;;8403:198;;8380:221;-1:-1:-1;;;;;8619:17:15;;;8615:216;;-1:-1:-1;;;;;8714:17:15;;8657;8714;;;:12;:17;;;;;;;8657;;8697:49;;8714:17;8733:4;;;;;8739:6;8697:16;:49::i;:::-;8656:90;;;;8790:3;-1:-1:-1;;;;;8769:47:15;-1:-1:-1;;;;;;;;;;;8795:9:15;8806;8769:47;;;;;;3207:25:128;;;3263:2;3248:18;;3241:34;3195:2;3180:18;;3033:248;8769:47:15;;;;;;;;8638:193;;8220:627;;;:::o;9677:101::-;9740:7;9766:5;9770:1;9766;:5;:::i;332:587:67:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;332:587:67;;;-1:-1:-1;332:587:67;;;;;;;;;;;;;;14:351:128;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:128;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:128:o;1641:127::-;1702:10;1697:3;1693:20;1690:1;1683:31;1733:4;1730:1;1723:15;1757:4;1754:1;1747:15;1773:128;1813:3;1844:1;1840:6;1837:1;1834:13;1831:39;;;1850:18;;:::i;:::-;-1:-1:-1;1886:9:128;;1773:128::o;2088:125::-;2128:4;2156:1;2153;2150:8;2147:34;;;2161:18;;:::i;:::-;-1:-1:-1;2198:9:128;;2088:125::o;3286:380::-;3365:1;3361:12;;;;3408;;;3429:61;;3483:4;3475:6;3471:17;3461:27;;3429:61;3536:2;3528:6;3525:14;3505:18;3502:38;3499:161;;3582:10;3577:3;3573:20;3570:1;3563:31;3617:4;3614:1;3607:15;3645:4;3642:1;3635:15;3499:161;;3286:380;;;:::o;:::-;332:587:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063d505accf11610071578063d505accf14610433578063dd62ed3e14610446578063f1127ed81461048c578063f2fde38b146104de57600080fd5b8063a9059cbb146103fa578063b4b5ea571461040d578063c3cda5201461042057600080fd5b80638e539e8c116100d35780638e539e8c146103b957806395d89b41146103cc5780639ab24eb0146103d4578063a457c2d7146103e757600080fd5b8063782d6fe1146103585780637ecebe00146103885780638da5cb5b1461039b57600080fd5b80633a46b1a8116101665780635c19a95c116101405780635c19a95c146102df5780636fcfff45146102f257806370a082311461031a578063715018a61461035057600080fd5b80633a46b1a81461025957806340c10f191461026c578063587cde1e1461028157600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f5780633644e5151461023e578063395093511461024657600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d16104f1565b6040516101de9190612377565b60405180910390f35b6101fa6101f5366004612413565b610583565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a36600461243d565b61059b565b604051601281526020016101de565b61020e6105bf565b6101fa610254366004612413565b6105ce565b61020e610267366004612413565b61061a565b61027f61027a366004612413565b6106c0565b005b6102ba61028f366004612479565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600760205260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101de565b61027f6102ed366004612479565b6106d6565b610305610300366004612479565b6106e3565b60405163ffffffff90911681526020016101de565b61020e610328366004612479565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61027f610718565b61036b610366366004612413565b61072c565b6040516bffffffffffffffffffffffff90911681526020016101de565b61020e610396366004612479565b610740565b600a5473ffffffffffffffffffffffffffffffffffffffff166102ba565b61020e6103c7366004612494565b61076b565b6101d16107e1565b61020e6103e2366004612479565b6107f0565b6101fa6103f5366004612413565b6108bb565b6101fa610408366004612413565b61098c565b61036b61041b366004612479565b61099a565b61027f61042e3660046124be565b6109a8565b61027f610441366004612516565b610b1f565b61020e610454366004612580565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61049f61049a3660046125b3565b610cde565b60408051825163ffffffff1681526020928301517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692810192909252016101de565b61027f6104ec366004612479565b610d84565b606060038054610500906125f3565b80601f016020809104026020016040519081016040528092919081815260200182805461052c906125f3565b80156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b600033610591818585611098565b5060019392505050565b6000336105a985828561124b565b6105b4858585611322565b506001949350505050565b60006105c9611597565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610591908290869061061590879061266f565b611098565b600043821061068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604090206106b990836116cb565b9392505050565b6106c86117ec565b6106d2828261186d565b5050565b6106e03382611923565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081526008602052604081205461071290610ff1565b92915050565b6107206117ec565b61072a60006119c1565b565b60006106b961073b848461061a565b611a38565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260056020526040812054610712565b60004382106107d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610681565b6107126009836116cb565b606060048054610500906125f3565b73ffffffffffffffffffffffffffffffffffffffff811660009081526008602052604081205480156108935773ffffffffffffffffffffffffffffffffffffffff8316600090815260086020526040902061084c600183612687565b8154811061085c5761085c61269e565b60009182526020909120015464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610896565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610681565b6105b48286868403611098565b600033610591818585611322565b600061071261073b836107f0565b83421115610a12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610681565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf602082015273ffffffffffffffffffffffffffffffffffffffff8816918101919091526060810186905260808101859052600090610a9990610a919060a00160405160208183030381529060405280519060200120611ad6565b858585611b3f565b9050610aa481611b67565b8614610b0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610681565b610b168188611923565b50505050505050565b83421115610b89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610681565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610bb88c611b67565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c2082611ad6565b90506000610c3082878787611b3f565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610681565b610cd28a8a8a611098565b50505050505050505050565b604080518082019091526000808252602082015273ffffffffffffffffffffffffffffffffffffffff83166000908152600860205260409020805463ffffffff8416908110610d2f57610d2f61269e565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16918101919091529392505050565b610d8c6117ec565b73ffffffffffffffffffffffffffffffffffffffff8116610e2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610681565b6106e0816119c1565b73ffffffffffffffffffffffffffffffffffffffff8216610eb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610681565b8060026000828254610ec7919061266f565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106d260008383611b9c565b60006106b9828461266f565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610681565b5090565b600063ffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610681565b505050565b60006106b98284612687565b73ffffffffffffffffffffffffffffffffffffffff831661113a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff82166111dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461131c578181101561130f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610681565b61131c8484848403611098565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166113c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff8216611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561151e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610681565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361131c848484611b9c565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156115fd57507f000000000000000000000000000000000000000000000000000000000000000046145b1561162757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156117255760006116e684611bdb565b6116f09085612687565b600088815260209020909150869082015463ffffffff16111561171557809150611723565b61172081600161266f565b92505b505b808210156117725760006117398383611cc3565b600088815260209020909150869082015463ffffffff16111561175e5780915061176c565b61176981600161266f565b92505b50611725565b80156117c15761179586611787600184612687565b600091825260209091200190565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166117c4565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b600a5473ffffffffffffffffffffffffffffffffffffffff16331461072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610681565b6118778282610e38565b6002546bffffffffffffffffffffffff1015611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610681565b61131c6009610f3383611cde565b73ffffffffffffffffffffffffffffffffffffffff8281166000818152600760208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461131c828483611e86565b600a805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006bffffffffffffffffffffffff821115610fed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201527f36206269747300000000000000000000000000000000000000000000000000006064820152608401610681565b6000610712611ae3611597565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611b508787878761202b565b91509150611b5d8161211a565b5095945050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604090208054600181018255905b50919050565b73ffffffffffffffffffffffffffffffffffffffff83811660009081526007602052604080822054858416835291205461108792918216911683611e86565b600081600003611bed57506000919050565b60006001611bfa846122cd565b901c6001901b90506001818481611c1357611c136126cd565b048201901c90506001818481611c2b57611c2b6126cd565b048201901c90506001818481611c4357611c436126cd565b048201901c90506001818481611c5b57611c5b6126cd565b048201901c90506001818481611c7357611c736126cd565b048201901c90506001818481611c8b57611c8b6126cd565b048201901c90506001818481611ca357611ca36126cd565b048201901c90506106b981828581611cbd57611cbd6126cd565b04612361565b6000611cd260028484186126fc565b6106b99084841661266f565b82546000908190818115611d4057611cfb87611787600185612687565b60408051808201909152905463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020820152611d55565b60408051808201909152600080825260208201525b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169350611d8a84868863ffffffff16565b9250600082118015611da25750805163ffffffff1643145b15611dfc57611db083610f3f565b611dbf88611787600186612687565b80547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff909216919091179055611e7c565b866040518060400160405280611e1143610ff1565b63ffffffff168152602001611e2586610f3f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ec25750600081115b156110875773ffffffffffffffffffffffffffffffffffffffff831615611f775773ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604081208190611f179061108c85611cde565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611f6c929190918252602082015260400190565b60405180910390a250505b73ffffffffffffffffffffffffffffffffffffffff8216156110875773ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604081208190611fc790610f3385611cde565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161201c929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156120625750600090506003612111565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156120b6573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661210a57600060019250925050612111565b9150600090505b94509492505050565b600081600481111561212e5761212e612737565b036121365750565b600181600481111561214a5761214a612737565b036121b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610681565b60028160048111156121c5576121c5612737565b0361222c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610681565b600381600481111561224057612240612737565b036106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610681565b600080608083901c156122e257608092831c92015b604083901c156122f457604092831c92015b602083901c1561230657602092831c92015b601083901c1561231857601092831c92015b600883901c1561232a57600892831c92015b600483901c1561233c57600492831c92015b600283901c1561234e57600292831c92015b600183901c156107125760010192915050565b600081831061237057816106b9565b5090919050565b600060208083528351808285015260005b818110156123a457858101830151858201604001528201612388565b818111156123b6576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461240e57600080fd5b919050565b6000806040838503121561242657600080fd5b61242f836123ea565b946020939093013593505050565b60008060006060848603121561245257600080fd5b61245b846123ea565b9250612469602085016123ea565b9150604084013590509250925092565b60006020828403121561248b57600080fd5b6106b9826123ea565b6000602082840312156124a657600080fd5b5035919050565b803560ff8116811461240e57600080fd5b60008060008060008060c087890312156124d757600080fd5b6124e0876123ea565b955060208701359450604087013593506124fc606088016124ad565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561253157600080fd5b61253a886123ea565b9650612548602089016123ea565b95506040880135945060608801359350612564608089016124ad565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561259357600080fd5b61259c836123ea565b91506125aa602084016123ea565b90509250929050565b600080604083850312156125c657600080fd5b6125cf836123ea565b9150602083013563ffffffff811681146125e857600080fd5b809150509250929050565b600181811c9082168061260757607f821691505b602082108103611b96577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561268257612682612640565b500190565b60008282101561269957612699612640565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612732577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212203a59e665fe203c2b776ed0b2f8b8a40187a21570cc776bcd8bee7f51534026d564736f6c634300080e0033",
    "sourceMap": "332:587:67:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1300:14:128;;1293:22;1275:41;;1263:2;1248:18;4431:197:13;1135:187:128;3242:106:13;3329:12;;3242:106;;;1473:25:128;;;1461:2;1446:18;3242:106:13;1327:177:128;5190:286:13;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1984:36:128;;1972:2;1957:18;3091:91:13;1842:184:128;2879:113:18;;;:::i;5871:234:13:-;;;;;;:::i;:::-;;:::i;2825:265:15:-;;;;;;:::i;:::-;;:::i;818:99:67:-;;;;;;:::i;:::-;;:::i;:::-;;2218:126:15;;;;;;:::i;:::-;2318:19;;;;2292:7;2318:19;;;:10;:19;;;;;;;;2218:126;;;;2580:42:128;2568:55;;;2550:74;;2538:2;2523:18;2218:126:15;2404:226:128;5648:112:15;;;;;;:::i;:::-;;:::i;1981:149::-;;;;;;:::i;:::-;;:::i;:::-;;;2809:10:128;2797:23;;;2779:42;;2767:2;2752:18;1981:149:15;2635:192:128;3406:125:13;;;;;;:::i;:::-;3506:18;;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:10;;;:::i;1638:177:16:-;;;;;;:::i;:::-;;:::i;:::-;;;3006:26:128;2994:39;;;2976:58;;2964:2;2949:18;1638:177:16;2832:208:128;2629:126:18;;;;;;:::i;:::-;;:::i;1201:85:10:-;1273:6;;;;1201:85;;3369:256:15;;;;;;:::i;:::-;;:::i;2365:102:13:-;;;:::i;2423:209:15:-;;;;;;:::i;:::-;;:::i;6592:427:13:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;1391:141:16:-;;;;;;:::i;:::-;;:::i;5837:574:15:-;;;;;;:::i;:::-;;:::i;1942:626:18:-;;;;;;:::i;:::-;;:::i;3974:149:13:-;;;;;;:::i;:::-;4089:18;;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;1758:148:15;;;;;;:::i;:::-;;:::i;:::-;;;;5382:13:128;;5397:10;5378:30;5360:49;;5469:4;5457:17;;;5451:24;5477:58;5447:89;5425:20;;;5418:119;;;;5333:18;1758:148:15;5158:385:128;2081:198:10;;;;;;:::i;:::-;;:::i;2154:98:13:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:22;4568:32:13;719:10:22;4584:7:13;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:13;;4431:197;-1:-1:-1;;;4431:197:13:o;5190:286::-;5317:4;719:10:22;5373:38:13;5389:4;719:10:22;5404:6:13;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:13;;5190:286;-1:-1:-1;;;;5190:286:13:o;2879:113:18:-;2939:7;2965:20;:18;:20::i;:::-;2958:27;;2879:113;:::o;5871:234:13:-;719:10:22;5959:4:13;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5959:4;;719:10:22;6013:64:13;;719:10:22;;4089:27:13;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;2825:265:15:-;2923:7;2964:12;2950:11;:26;2942:70;;;;;;;6514:2:128;2942:70:15;;;6496:21:128;6553:2;6533:18;;;6526:30;6592:33;6572:18;;;6565:61;6643:18;;2942:70:15;;;;;;;;;3048:21;;;;;;;:12;:21;;;;;3029:54;;3071:11;3029:18;:54::i;:::-;3022:61;2825:265;-1:-1:-1;;;2825:265:15:o;818:99:67:-;1094:13:10;:11;:13::i;:::-;889:23:67::1;895:4;901:10;889:5;:23::i;:::-;818:99:::0;;:::o;5648:112:15:-;5719:34;719:10:22;5743:9:15;5719;:34::i;:::-;5648:112;:::o;1981:149::-;2094:21;;;2051:6;2094:21;;;:12;:21;;;;;:28;2076:47;;:17;:47::i;:::-;2069:54;1981:149;-1:-1:-1;;1981:149:15:o;1831:101:10:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1638:177:16:-;1730:6;1755:53;1773:34;1786:7;1795:11;1773:12;:34::i;:::-;1755:17;:53::i;2629:126:18:-;2724:14;;;2698:7;2724:14;;;:7;:14;;;;;918::23;2724:24:18;827:112:23;3369:256:15;3456:7;3497:12;3483:11;:26;3475:70;;;;;;;6514:2:128;3475:70:15;;;6496:21:128;6553:2;6533:18;;;6526:30;6592:33;6572:18;;;6565:61;6643:18;;3475:70:15;6312:355:128;3475:70:15;3562:56;3581:23;3606:11;3562:18;:56::i;2365:102:13:-;2421:13;2453:7;2446:14;;;;;:::i;2423:209:15:-;2529:21;;;2496:7;2529:21;;;:12;:21;;;;;:28;2574:8;;:51;;2589:21;;;;;;;:12;:21;;;;;2611:7;2617:1;2611:3;:7;:::i;:::-;2589:30;;;;;;;;:::i;:::-;;;;;;;;;;:36;;;;;;2574:51;;;2585:1;2574:51;2567:58;;;2423:209;-1:-1:-1;;;2423:209:15:o;6592:427:13:-;719:10:22;6685:4:13;4089:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6685:4;;719:10:22;6829:15:13;6809:16;:35;;6801:85;;;;;;;7193:2:128;6801:85:13;;;7175:21:128;7232:2;7212:18;;;7205:30;7271:34;7251:18;;;7244:62;7342:7;7322:18;;;7315:35;7367:19;;6801:85:13;6991:401:128;6801:85:13;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:22;3860:28:13;719:10:22;3877:2:13;3881:6;3860:9;:28::i;1391:141:16:-;1464:6;1489:36;1507:17;1516:7;1507:8;:17::i;5837:574:15:-;6056:6;6037:15;:25;;6029:67;;;;;;;7599:2:128;6029:67:15;;;7581:21:128;7638:2;7618:18;;;7611:30;7677:31;7657:18;;;7650:59;7726:18;;6029:67:15;7397:353:128;6029:67:15;6177:58;;;1447:71;6177:58;;;7986:25:128;8059:42;8047:55;;8027:18;;;8020:83;;;;8119:18;;;8112:34;;;8162:18;;;8155:34;;;6106:14:15;;6123:169;;6150:87;;7958:19:128;;6177:58:15;;;;;;;;;;;;6167:69;;;;;;6150:16;:87::i;:::-;6251:1;6266;6281;6123:13;:169::i;:::-;6106:186;;6319:17;6329:6;6319:9;:17::i;:::-;6310:5;:26;6302:64;;;;;;;8402:2:128;6302:64:15;;;8384:21:128;8441:2;8421:18;;;8414:30;8480:27;8460:18;;;8453:55;8525:18;;6302:64:15;8200:349:128;6302:64:15;6376:28;6386:6;6394:9;6376;:28::i;:::-;6019:392;5837:574;;;;;;:::o;1942:626:18:-;2177:8;2158:15;:27;;2150:69;;;;;;;8756:2:128;2150:69:18;;;8738:21:128;8795:2;8775:18;;;8768:30;8834:31;8814:18;;;8807:59;8883:18;;2150:69:18;8554:353:128;2150:69:18;2230:18;1137:95;2290:5;2297:7;2306:5;2313:16;2323:5;2313:9;:16::i;:::-;2261:79;;;;;;9199:25:128;;;;9243:42;9321:15;;;9301:18;;;9294:43;9373:15;;;;9353:18;;;9346:43;9405:18;;;9398:34;9448:19;;;9441:35;9492:19;;;9485:35;;;9171:19;;2261:79:18;;;;;;;;;;;;2251:90;;;;;;2230:111;;2352:12;2367:28;2384:10;2367:16;:28::i;:::-;2352:43;;2406:14;2423:28;2437:4;2443:1;2446;2449;2423:13;:28::i;:::-;2406:45;;2479:5;2469:15;;:6;:15;;;2461:58;;;;;;;9733:2:128;2461:58:18;;;9715:21:128;9772:2;9752:18;;;9745:30;9811:32;9791:18;;;9784:60;9861:18;;2461:58:18;9531:354:128;2461:58:18;2530:31;2539:5;2546:7;2555:5;2530:8;:31::i;:::-;2140:428;;;1942:626;;;;;;;:::o;1758:148:15:-;-1:-1:-1;;;;;;;;;;;;;;;;;1873:21:15;;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1866:33;;;;;;;;;1873:26;;1866:33;;;;;;;;;;;;;;;;;;;1758:148;-1:-1:-1;;;1758:148:15:o;2081:198:10:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;10092:2:128;2161:73:10::1;::::0;::::1;10074:21:128::0;10131:2;10111:18;;;10104:30;10170:34;10150:18;;;10143:62;10241:8;10221:18;;;10214:36;10267:19;;2161:73:10::1;9890:402:128::0;2161:73:10::1;2244:28;2263:8;2244:18;:28::i;8567:535:13:-:0;8650:21;;;8642:65;;;;;;;10499:2:128;8642:65:13;;;10481:21:128;10538:2;10518:18;;;10511:30;10577:33;10557:18;;;10550:61;10628:18;;8642:65:13;10297:355:128;8642:65:13;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8946:18:13;;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1473:25:128;;;8999:37:13;;1446:18:128;8999:37:13;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;9575:96:15:-;9633:7;9659:5;9663:1;9659;:5;:::i;2836:192:30:-;2893:7;2929:17;2920:26;;;2912:78;;;;;;;10859:2:128;2912:78:30;;;10841:21:128;10898:2;10878:18;;;10871:30;10937:34;10917:18;;;10910:62;11008:9;10988:18;;;10981:37;11035:19;;2912:78:30;10657:403:128;2912:78:30;-1:-1:-1;3015:5:30;2836:192::o;15264:187::-;15320:6;15355:16;15346:25;;;15338:76;;;;;;;11267:2:128;15338:76:30;;;11249:21:128;11306:2;11286:18;;;11279:30;11345:34;11325:18;;;11318:62;11416:8;11396:18;;;11389:36;11442:19;;15338:76:30;11065:402:128;12889:120:13;;;;:::o;9677:101:15:-;9740:7;9766:5;9770:1;9766;:5;:::i;10504:370:13:-;10635:19;;;10627:68;;;;;;;11674:2:128;10627:68:13;;;11656:21:128;11713:2;11693:18;;;11686:30;11752:34;11732:18;;;11725:62;11823:6;11803:18;;;11796:34;11847:19;;10627:68:13;11472:400:128;10627:68:13;10713:21;;;10705:68;;;;;;;12079:2:128;10705:68:13;;;12061:21:128;12118:2;12098:18;;;12091:30;12157:34;12137:18;;;12130:62;12228:4;12208:18;;;12201:32;12250:19;;10705:68:13;11877:398:128;10705:68:13;10784:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1473:25:128;;;10835:32:13;;1446:18:128;10835:32:13;;;;;;;10504:370;;;:::o;11155:441::-;4089:18;;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11371:17;11351:37;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;12482:2:128;11404:68:13;;;12464:21:128;12521:2;12501:18;;;12494:30;12560:31;12540:18;;;12533:59;12609:18;;11404:68:13;12280:353:128;11404:68:13;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;7599:18;;;7591:68;;;;;;;12840:2:128;7591:68:13;;;12822:21:128;12879:2;12859:18;;;12852:30;12918:34;12898:18;;;12891:62;12989:7;12969:18;;;12962:35;13014:19;;7591:68:13;12638:401:128;7591:68:13;7677:16;;;7669:64;;;;;;;13246:2:128;7669:64:13;;;13228:21:128;13285:2;13265:18;;;13258:30;13324:34;13304:18;;;13297:62;13395:5;13375:18;;;13368:33;13418:19;;7669:64:13;13044:399:128;7669:64:13;7815:15;;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;;;;13650:2:128;7840:72:13;;;13632:21:128;13689:2;13669:18;;;13662:30;13728:34;13708:18;;;13701:62;13799:8;13779:18;;;13772:36;13825:19;;7840:72:13;13448:402:128;7840:72:13;7946:15;;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1473:25:128;;;8161:13:13;;8210:26;;1446:18:128;8210:26:13;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;3152:308:26:-;3205:7;3236:4;3228:29;3245:12;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:26;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:26;;;3401:10;3642:73;;;;15299:25:128;;;;3413:12:26;15340:18:128;;;15333:34;3427:15:26;15383:18:128;;;15376:34;3686:13:26;15426:18:128;;;15419:34;3709:4:26;15469:19:128;;;;15462:84;;;;3642:73:26;;;;;;;;;;15271:19:128;;;;3642:73:26;;;3632:84;;;;;;2879:113:18:o;3709:1858:15:-;4913:12;;3808:7;;;4913:12;5006:1;4997:10;;4993:244;;;5023:11;5046:17;5056:6;5046:9;:17::i;:::-;5037:26;;:6;:26;:::i;:::-;10007:25;10067:21;;;10133:4;10120:18;;5023:40;;-1:-1:-1;5119:11:15;;10116:28;;5081:35;;;:49;5077:150;;;5157:3;5150:10;;5077:150;;;5205:7;:3;5211:1;5205:7;:::i;:::-;5199:13;;5077:150;5009:228;4993:244;5260:4;5254:3;:10;5247:244;;;5280:11;5294:23;5307:3;5312:4;5294:12;:23::i;:::-;10007:25;10067:21;;;10133:4;10120:18;;5280:37;;-1:-1:-1;5373:11:15;;10116:28;;5335:35;;;:49;5331:150;;;5411:3;5404:10;;5331:150;;;5459:7;:3;5465:1;5459:7;:::i;:::-;5453:13;;5331:150;5266:225;5247:244;;;5508:9;;:52;;5524:30;5538:5;5545:8;5552:1;5545:4;:8;:::i;:::-;10007:25;10067:21;;;10133:4;10120:18;;;10116:28;;9921:239;5524:30;:36;;;;;;5508:52;;;5520:1;5508:52;5501:59;;;3709:1858;-1:-1:-1;;;;;;3709:1858:15:o;1359:130:10:-;1273:6;;1422:23;1273:6;719:10:22;1422:23:10;1414:68;;;;;;;14057:2:128;1414:68:10;;;14039:21:128;;;14076:18;;;14069:30;14135:34;14115:18;;;14108:62;14187:18;;1414:68:10;13855:356:128;6705:285:15;6789:28;6801:7;6810:6;6789:11;:28::i;:::-;3329:12:13;;2024:16:16;-1:-1:-1;6835:29:15;6827:90;;;;;;;14418:2:128;6827:90:15;;;14400:21:128;14457:2;14437:18;;;14430:30;14496:34;14476:18;;;14469:62;14567:18;14547;;;14540:46;14603:19;;6827:90:15;14216:412:128;6827:90:15;6928:55;6945:23;6970:4;6976:6;6928:16;:55::i;7834:380::-;2318:19;;;;7918:23;2318:19;;;:10;:19;;;;;;;;;;3506:18:13;;;;;;;8031:21:15;;;;:33;;;;;;;;;;;8080:54;;2318:19;;;;;3506:18:13;;8031:33:15;;2318:19;;;8080:54;;7918:23;8080:54;8145:62;8162:15;8179:9;8190:16;8145;:62::i;2433:187:10:-;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;11168::30:-;11224:6;11259:16;11250:25;;;11242:76;;;;;;;14835:2:128;11242:76:30;;;14817:21:128;14874:2;14854:18;;;14847:30;14913:34;14893:18;;;14886:62;14984:8;14964:18;;;14957:36;15010:19;;11242:76:30;14633:402:128;4348:165:26;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:25;;16548:66:128;8470:57:25;;;16536:79:128;16631:11;;;16624:27;;;16667:12;;;16660:28;;;8434:7:25;;16704:12:128;;8470:57:25;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;6696:270;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;-1:-1:-1;6950:9:25;6696:270;-1:-1:-1;;;;;6696:270:25:o;3123:203:18:-;3243:14;;;3183:15;3243:14;;;:7;:14;;;;;918::23;;1050:1;1032:19;;;;918:14;3302:17:18;3200:126;3123:203;;;:::o;7409:254:15:-;2318:19;;;;2292:7;2318:19;;;:10;:19;;;;;;;;;;;;;;;7600:56;;2318:19;;;;;7649:6;7600:16;:56::i;6280:1642:29:-;6328:7;6351:1;6356;6351:6;6347:45;;-1:-1:-1;6380:1:29;;6280:1642;-1:-1:-1;6280:1642:29:o;6347:45::-;7071:14;7105:1;7094:7;7099:1;7094:4;:7::i;:::-;:12;;7088:1;:19;;7071:36;;7566:1;7555:6;7551:1;:10;;;;;:::i;:::-;;7542:6;:19;7541:26;;7532:35;;7615:1;7604:6;7600:1;:10;;;;;:::i;:::-;;7591:6;:19;7590:26;;7581:35;;7664:1;7653:6;7649:1;:10;;;;;:::i;:::-;;7640:6;:19;7639:26;;7630:35;;7713:1;7702:6;7698:1;:10;;;;;:::i;:::-;;7689:6;:19;7688:26;;7679:35;;7762:1;7751:6;7747:1;:10;;;;;:::i;:::-;;7738:6;:19;7737:26;;7728:35;;7811:1;7800:6;7796:1;:10;;;;;:::i;:::-;;7787:6;:19;7786:26;;7777:35;;7860:1;7849:6;7845:1;:10;;;;;:::i;:::-;;7836:6;:19;7835:26;;7826:35;;7882:23;7886:6;7898;7894:1;:10;;;;;:::i;:::-;;7882:3;:23::i;805:153::-;867:7;940:11;950:1;941:5;;;940:11;:::i;:::-;930:21;;931:5;;;930:21;:::i;8853:716:15:-;9085:12;;9023:17;;;;;9136:8;;:59;;9166:29;9180:5;9187:7;9193:1;9187:3;:7;:::i;9166:29::-;9136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:16;;;;;;;;;-1:-1:-1;9147:16:15;;;;;;;9136:59;9108:87;;9218:7;:13;;;9206:25;;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;-1:-1:-1;9299:17:15;;:33;;9320:12;9299:33;9288:44;9284:279;;;9386:29;9405:9;9386:18;:29::i;:::-;9348;9362:5;9369:7;9375:1;9369:3;:7;:::i;9348:29::-;:67;;;;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;:31::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;:29::i;:::-;9457:94;;;;;;;9446:106;;;;;;;-1:-1:-1;9446:106:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;8220:627::-;8347:3;8340:10;;:3;:10;;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;8384:17;;;;8380:221;;8479:17;;;8422;8479;;;:12;:17;;;;;8422;;8462:54;;8498:9;8509:6;8462:16;:54::i;:::-;8421:95;;;;8560:3;8539:47;;;8565:9;8576;8539:47;;;;;;16199:25:128;;;16255:2;16240:18;;16233:34;16187:2;16172:18;;16025:248;8539:47:15;;;;;;;;8403:198;;8380:221;8619:17;;;;8615:216;;8714:17;;;8657;8714;;;:12;:17;;;;;8657;;8697:49;;8733:4;8739:6;8697:16;:49::i;:::-;8656:90;;;;8790:3;8769:47;;;8795:9;8806;8769:47;;;;;;16199:25:128;;;16255:2;16240:18;;16233:34;16187:2;16172:18;;16025:248;8769:47:15;;;;;;;;8638:193;;8220:627;;;:::o;5069:1494:25:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:25;;-1:-1:-1;6221:30:25;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;16954:25:128;;;17027:4;17015:17;;16995:18;;;16988:45;;;;17049:18;;;17042:34;;;17092:18;;;17085:34;;;6374:24:25;;16926:19:128;;6374:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:25;;;;;;-1:-1:-1;;6412:20:25;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:25;;-1:-1:-1;5069:1494:25;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;;;;17521:2:128;788:34:25;;;17503:21:128;17560:2;17540:18;;;17533:30;17599:26;17579:18;;;17572:54;17643:18;;788:34:25;17319:348:128;730:345:25;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;;;;17874:2:128;903:41:25;;;17856:21:128;17913:2;17893:18;;;17886:30;17952:33;17932:18;;;17925:61;18003:18;;903:41:25;17672:355:128;839:236:25;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;;;;18234:2:128;1020:44:25;;;18216:21:128;18273:2;18253:18;;;18246:30;18312:34;18292:18;;;18285:62;18383:4;18363:18;;;18356:32;18405:19;;1020:44:25;18032:398:128;8383:983:29;8435:7;;8519:3;8510:12;;;:16;8506:99;;8556:3;8546:13;;;;8577;8506:99;8631:2;8622:11;;;:15;8618:96;;8667:2;8657:12;;;;8687;8618:96;8740:2;8731:11;;;:15;8727:96;;8776:2;8766:12;;;;8796;8727:96;8849:2;8840:11;;;:15;8836:96;;8885:2;8875:12;;;;8905;8836:96;8958:1;8949:10;;;:14;8945:93;;8993:1;8983:11;;;;9012;8945:93;9064:1;9055:10;;;:14;9051:93;;9099:1;9089:11;;;;9118;9051:93;9170:1;9161:10;;;:14;9157:93;;9205:1;9195:11;;;;9224;9157:93;9276:1;9267:10;;;:14;9263:64;;9311:1;9301:11;9353:6;8383:983;-1:-1:-1;;8383:983:29:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:29;;588:104;-1:-1:-1;588:104:29:o;14:656:128:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:128;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:128:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:128:o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1509:328;;;;;:::o;2213:186::-;2272:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:52;;;2341:1;2338;2331:12;2293:52;2364:29;2383:9;2364:29;:::i;3045:180::-;3104:6;3157:2;3145:9;3136:7;3132:23;3128:32;3125:52;;;3173:1;3170;3163:12;3125:52;-1:-1:-1;3196:23:128;;3045:180;-1:-1:-1;3045:180:128:o;3230:156::-;3296:20;;3356:4;3345:16;;3335:27;;3325:55;;3376:1;3373;3366:12;3391:531;3493:6;3501;3509;3517;3525;3533;3586:3;3574:9;3565:7;3561:23;3557:33;3554:53;;;3603:1;3600;3593:12;3554:53;3626:29;3645:9;3626:29;:::i;:::-;3616:39;;3702:2;3691:9;3687:18;3674:32;3664:42;;3753:2;3742:9;3738:18;3725:32;3715:42;;3776:36;3808:2;3797:9;3793:18;3776:36;:::i;:::-;3766:46;;3859:3;3848:9;3844:19;3831:33;3821:43;;3911:3;3900:9;3896:19;3883:33;3873:43;;3391:531;;;;;;;;:::o;3927:606::-;4038:6;4046;4054;4062;4070;4078;4086;4139:3;4127:9;4118:7;4114:23;4110:33;4107:53;;;4156:1;4153;4146:12;4107:53;4179:29;4198:9;4179:29;:::i;:::-;4169:39;;4227:38;4261:2;4250:9;4246:18;4227:38;:::i;:::-;4217:48;;4312:2;4301:9;4297:18;4284:32;4274:42;;4363:2;4352:9;4348:18;4335:32;4325:42;;4386:37;4418:3;4407:9;4403:19;4386:37;:::i;:::-;4376:47;;4470:3;4459:9;4455:19;4442:33;4432:43;;4522:3;4511:9;4507:19;4494:33;4484:43;;3927:606;;;;;;;;;;:::o;4538:260::-;4606:6;4614;4667:2;4655:9;4646:7;4642:23;4638:32;4635:52;;;4683:1;4680;4673:12;4635:52;4706:29;4725:9;4706:29;:::i;:::-;4696:39;;4754:38;4788:2;4777:9;4773:18;4754:38;:::i;:::-;4744:48;;4538:260;;;;;:::o;4803:350::-;4870:6;4878;4931:2;4919:9;4910:7;4906:23;4902:32;4899:52;;;4947:1;4944;4937:12;4899:52;4970:29;4989:9;4970:29;:::i;:::-;4960:39;;5049:2;5038:9;5034:18;5021:32;5093:10;5086:5;5082:22;5075:5;5072:33;5062:61;;5119:1;5116;5109:12;5062:61;5142:5;5132:15;;;4803:350;;;;;:::o;5548:437::-;5627:1;5623:12;;;;5670;;;5691:61;;5745:4;5737:6;5733:17;5723:27;;5691:61;5798:2;5790:6;5787:14;5767:18;5764:38;5761:218;;5835:77;5832:1;5825:88;5936:4;5933:1;5926:15;5964:4;5961:1;5954:15;5990:184;6042:77;6039:1;6032:88;6139:4;6136:1;6129:15;6163:4;6160:1;6153:15;6179:128;6219:3;6250:1;6246:6;6243:1;6240:13;6237:39;;;6256:18;;:::i;:::-;-1:-1:-1;6292:9:128;;6179:128::o;6672:125::-;6712:4;6740:1;6737;6734:8;6731:34;;;6745:18;;:::i;:::-;-1:-1:-1;6782:9:128;;6672:125::o;6802:184::-;6854:77;6851:1;6844:88;6951:4;6948:1;6941:15;6975:4;6972:1;6965:15;15557:184;15609:77;15606:1;15599:88;15706:4;15703:1;15696:15;15730:4;15727:1;15720:15;15746:274;15786:1;15812;15802:189;;15847:77;15844:1;15837:88;15948:4;15945:1;15938:15;15976:4;15973:1;15966:15;15802:189;-1:-1:-1;16005:9:128;;15746:274::o;17130:184::-;17182:77;17179:1;17172:88;17279:4;17276:1;17269:15;17303:4;17300:1;17293:15",
    "linkReferences": {},
    "immutableReferences": {
      "4962": [
        {
          "start": 5637,
          "length": 32
        }
      ],
      "4964": [
        {
          "start": 5595,
          "length": 32
        }
      ],
      "4966": [
        {
          "start": 5553,
          "length": 32
        }
      ],
      "4968": [
        {
          "start": 5720,
          "length": 32
        }
      ],
      "4970": [
        {
          "start": 5757,
          "length": 32
        }
      ],
      "4972": [
        {
          "start": 5678,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "checkpoints(address,uint32)": "f1127ed8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "getCurrentVotes(address)": "b4b5ea57",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getPriorVotes(address,uint256)": "782d6fe1",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AmphoraProtocolToken_InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmphoraProtocolToken_InvalidSupply\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rawAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getCurrentVotes(address)\":{\"details\":\"Comp version of the {getVotes} accessor, with `uint96` return type.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getPriorVotes(address,uint256)\":{\"details\":\"Comp version of the {getPastVotes} accessor, with `uint96` return type.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AmphoraProtocolToken_InvalidAddress()\":[{\"notice\":\"Thrown when invalid address\"}],\"AmphoraProtocolToken_InvalidSupply()\":[{\"notice\":\"Thrown when invalid supply\"}]},\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mint a specified amount of tokens to a specified address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/contracts/governance/AmphoraProtocolToken.sol\":\"AmphoraProtocolToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/contracts/src/v0.8/\",\":@contracts/=solidity/contracts/\",\":@defi-wonderland/=node_modules/@defi-wonderland/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@interfaces/=solidity/interfaces/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@scripts/=solidity/scripts/\",\":@test/=solidity/test/\",\":@uniswap/=node_modules/@uniswap/\",\":@uniswap/v2-periphery/=node_modules/@uniswap/v2-periphery/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":isolmate/=node_modules/@defi-wonderland/isolmate/src/\",\":solady/=node_modules/solady/src/\",\":solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":uni-v3-core/=node_modules/@uniswap/v3-core/contracts/\",\":uni-v3-periphery/=node_modules/@uniswap/v3-periphery/contracts/\",\":unit-v2-periphery/=node_modules/@uniswap/v2-periphery/contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80\",\"dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol\":{\"keccak256\":\"0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45\",\"dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"solidity/contracts/governance/AmphoraProtocolToken.sol\":{\"keccak256\":\"0x9f305bb08109506ac2ce2a406ed9190c3af46d1335d904eb92d760bc0f1b8fd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b1f0ba7561413ac4a4f9a6b65f72a005b1bff35adee99d9f915029017dfde83\",\"dweb:/ipfs/QmSvGXLzwKzjHWph9rzuv4kasu1exWiHCMoNTX5zyg91aS\"]},\"solidity/interfaces/governance/IAmphoraProtocolToken.sol\":{\"keccak256\":\"0x3e268ce14ddeefb4857f6b07bbed0e97f29f086c088c730b660a0e3cfad25321\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c34c60175fe1e35047f8c6e848a576ebc3e1c1365f2ee96a1e37f97ed2a1542c\",\"dweb:/ipfs/QmfAjEE4MxDWmTgAXk6NfHZ1hJiGQiSb2t7w8eHxVSeJ7J\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_initialSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmphoraProtocolToken_InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmphoraProtocolToken_InvalidSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dst",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "getCurrentVotes(address)": {
            "details": "Comp version of the {getVotes} accessor, with `uint96` return type."
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
          },
          "getPriorVotes(address,uint256)": {
            "details": "Comp version of the {getPastVotes} accessor, with `uint96` return type."
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "mint(address,uint256)": {
            "notice": "Mint a specified amount of tokens to a specified address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/contracts/src/v0.8/",
        ":@contracts/=solidity/contracts/",
        ":@defi-wonderland/=node_modules/@defi-wonderland/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@interfaces/=solidity/interfaces/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@scripts/=solidity/scripts/",
        ":@test/=solidity/test/",
        ":@uniswap/=node_modules/@uniswap/",
        ":@uniswap/v2-periphery/=node_modules/@uniswap/v2-periphery/",
        ":@uniswap/v3-core/=node_modules/@uniswap/v3-core/",
        ":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":isolmate/=node_modules/@defi-wonderland/isolmate/src/",
        ":solady/=node_modules/solady/src/",
        ":solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/",
        ":uni-v3-core/=node_modules/@uniswap/v3-core/contracts/",
        ":uni-v3-periphery/=node_modules/@uniswap/v3-periphery/contracts/",
        ":unit-v2-periphery/=node_modules/@uniswap/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "solidity/contracts/governance/AmphoraProtocolToken.sol": "AmphoraProtocolToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9",
        "urls": [
          "bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80",
          "dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol": {
        "keccak256": "0x3e2cf78abe35170695b26fb9f820fe7bfeed607604f4d6c1261f811704c79f16",
        "urls": [
          "bzz-raw://3d677e79ed97d35fa1fa3df7b45df9de5947e0939bb7229bfb05bc00fef9ed45",
          "dweb:/ipfs/QmRiFfC3KJH6KX7hP5cdasrxvEVbB2Fy8UJDDbf2xNSax9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "solidity/contracts/governance/AmphoraProtocolToken.sol": {
        "keccak256": "0x9f305bb08109506ac2ce2a406ed9190c3af46d1335d904eb92d760bc0f1b8fd4",
        "urls": [
          "bzz-raw://5b1f0ba7561413ac4a4f9a6b65f72a005b1bff35adee99d9f915029017dfde83",
          "dweb:/ipfs/QmSvGXLzwKzjHWph9rzuv4kasu1exWiHCMoNTX5zyg91aS"
        ],
        "license": "MIT"
      },
      "solidity/interfaces/governance/IAmphoraProtocolToken.sol": {
        "keccak256": "0x3e268ce14ddeefb4857f6b07bbed0e97f29f086c088c730b660a0e3cfad25321",
        "urls": [
          "bzz-raw://c34c60175fe1e35047f8c6e848a576ebc3e1c1365f2ee96a1e37f97ed2a1542c",
          "dweb:/ipfs/QmfAjEE4MxDWmTgAXk6NfHZ1hJiGQiSb2t7w8eHxVSeJ7J"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "solidity/contracts/governance/AmphoraProtocolToken.sol",
    "id": 45635,
    "exportedSymbols": {
      "AmphoraProtocolToken": [
        45634
      ],
      "ERC20": [
        2648
      ],
      "ERC20Permit": [
        3677
      ],
      "ERC20VotesComp": [
        3480
      ],
      "IAmphoraProtocolToken": [
        53070
      ],
      "Ownable": [
        1875
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:888:67",
    "nodes": [
      {
        "id": 45566,
        "nodeType": "PragmaDirective",
        "src": "32:23:67",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 45568,
        "nodeType": "ImportDirective",
        "src": "57:87:67",
        "absolutePath": "solidity/interfaces/governance/IAmphoraProtocolToken.sol",
        "file": "@interfaces/governance/IAmphoraProtocolToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45635,
        "sourceUnit": 53071,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45567,
              "name": "IAmphoraProtocolToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53070,
              "src": "65:21:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45570,
        "nodeType": "ImportDirective",
        "src": "145:67:67",
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45635,
        "sourceUnit": 1876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45569,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1875,
              "src": "153:7:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45574,
        "nodeType": "ImportDirective",
        "src": "213:117:67",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45635,
        "sourceUnit": 3481,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45571,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2648,
              "src": "221:5:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45572,
              "name": "ERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3677,
              "src": "228:11:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 45573,
              "name": "ERC20VotesComp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3480,
              "src": "241:14:67",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45634,
        "nodeType": "ContractDefinition",
        "src": "332:587:67",
        "nodes": [
          {
            "id": 45617,
            "nodeType": "FunctionDefinition",
            "src": "416:327:67",
            "body": {
              "id": 45616,
              "nodeType": "Block",
              "src": "548:195:67",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 45599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45594,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45582,
                      "src": "558:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 45597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "578:1:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 45596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "570:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 45595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "570:7:67",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 45598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:10:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "558:22:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45603,
                  "nodeType": "IfStatement",
                  "src": "554:72:67",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45600,
                        "name": "AmphoraProtocolToken_InvalidAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53059,
                        "src": "589:35:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 45601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "589:37:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45602,
                    "nodeType": "RevertStatement",
                    "src": "582:44:67"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45604,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45584,
                      "src": "636:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 45605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "654:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "636:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45610,
                  "nodeType": "IfStatement",
                  "src": "632:68:67",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45607,
                        "name": "AmphoraProtocolToken_InvalidSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53062,
                        "src": "664:34:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 45608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "664:36:67",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45609,
                    "nodeType": "RevertStatement",
                    "src": "657:43:67"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45612,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45582,
                        "src": "713:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45613,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45584,
                        "src": "723:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45611,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3117
                      ],
                      "referencedDeclaration": 3117,
                      "src": "707:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:31:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45615,
                  "nodeType": "ExpressionStatement",
                  "src": "707:31:67"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "416d70686f72612050726f746f636f6c",
                    "id": 45587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "488:18:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f274458cba855ef3627cecb62f4eaf349c591796b199ac0623174f4ed258c34",
                      "typeString": "literal_string \"Amphora Protocol\""
                    },
                    "value": "Amphora Protocol"
                  },
                  {
                    "hexValue": "414d5048",
                    "id": 45588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "508:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ca7267f5581e47fe33d9a159dd414645f7f6199aeb5ec8b3d3b0a9e17e9bf716",
                      "typeString": "literal_string \"AMPH\""
                    },
                    "value": "AMPH"
                  }
                ],
                "id": 45589,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45586,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2648,
                  "src": "482:5:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "482:33:67"
              },
              {
                "arguments": [
                  {
                    "hexValue": "416d70686f72612050726f746f636f6c",
                    "id": 45591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "528:18:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2f274458cba855ef3627cecb62f4eaf349c591796b199ac0623174f4ed258c34",
                      "typeString": "literal_string \"Amphora Protocol\""
                    },
                    "value": "Amphora Protocol"
                  }
                ],
                "id": 45592,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45590,
                  "name": "ERC20Permit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3677,
                  "src": "516:11:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "516:31:67"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45582,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "441:8:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 45617,
                  "src": "433:16:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45584,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nameLocation": "463:14:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 45617,
                  "src": "455:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "427:54:67"
            },
            "returnParameters": {
              "id": 45593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:67"
            },
            "scope": 45634,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45633,
            "nodeType": "FunctionDefinition",
            "src": "818:99:67",
            "body": {
              "id": 45632,
              "nodeType": "Block",
              "src": "883:34:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45628,
                        "name": "_dst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45620,
                        "src": "895:4:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45629,
                        "name": "_rawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45622,
                        "src": "901:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45627,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3117
                      ],
                      "referencedDeclaration": 3117,
                      "src": "889:5:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 45630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:23:67",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45631,
                  "nodeType": "ExpressionStatement",
                  "src": "889:23:67"
                }
              ]
            },
            "baseFunctions": [
              53069
            ],
            "documentation": {
              "id": 45618,
              "nodeType": "StructuredDocumentation",
              "src": "747:68:67",
              "text": "@notice Mint a specified amount of tokens to a specified address"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45625,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45624,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1794,
                  "src": "873:9:67"
                },
                "nodeType": "ModifierInvocation",
                "src": "873:9:67"
              }
            ],
            "name": "mint",
            "nameLocation": "827:4:67",
            "parameters": {
              "id": 45623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45620,
                  "mutability": "mutable",
                  "name": "_dst",
                  "nameLocation": "840:4:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 45633,
                  "src": "832:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45622,
                  "mutability": "mutable",
                  "name": "_rawAmount",
                  "nameLocation": "854:10:67",
                  "nodeType": "VariableDeclaration",
                  "scope": 45633,
                  "src": "846:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:34:67"
            },
            "returnParameters": {
              "id": 45626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:67"
            },
            "scope": 45634,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45575,
              "name": "IAmphoraProtocolToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53070,
              "src": "365:21:67"
            },
            "id": 45576,
            "nodeType": "InheritanceSpecifier",
            "src": "365:21:67"
          },
          {
            "baseName": {
              "id": 45577,
              "name": "ERC20VotesComp",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3480,
              "src": "388:14:67"
            },
            "id": 45578,
            "nodeType": "InheritanceSpecifier",
            "src": "388:14:67"
          },
          {
            "baseName": {
              "id": 45579,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1875,
              "src": "404:7:67"
            },
            "id": 45580,
            "nodeType": "InheritanceSpecifier",
            "src": "404:7:67"
          }
        ],
        "canonicalName": "AmphoraProtocolToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45634,
          1875,
          3480,
          3424,
          3677,
          5110,
          3713,
          2648,
          3505,
          2726,
          4346,
          1953,
          53070
        ],
        "name": "AmphoraProtocolToken",
        "nameLocation": "341:20:67",
        "scope": 45635,
        "usedErrors": [
          53059,
          53062
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 67
}