{
  "abi": [
    {
      "inputs": [],
      "name": "AmphoraProtocolToken_InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmphoraProtocolToken_InvalidSupply",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rawAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "mint(address,uint256)": "40c10f19"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AmphoraProtocolToken_InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmphoraProtocolToken_InvalidSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rawAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"interface to interact with TokenDelgate\",\"version\":1},\"userdoc\":{\"errors\":{\"AmphoraProtocolToken_InvalidAddress()\":[{\"notice\":\"Thrown when invalid address\"}],\"AmphoraProtocolToken_InvalidSupply()\":[{\"notice\":\"Thrown when invalid supply\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/interfaces/governance/IAmphoraProtocolToken.sol\":\"IAmphoraProtocolToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@chainlink/=node_modules/@chainlink/contracts/src/v0.8/\",\":@contracts/=solidity/contracts/\",\":@defi-wonderland/=node_modules/@defi-wonderland/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@interfaces/=solidity/interfaces/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@scripts/=solidity/scripts/\",\":@test/=solidity/test/\",\":@uniswap/=node_modules/@uniswap/\",\":@uniswap/v2-periphery/=node_modules/@uniswap/v2-periphery/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":isolmate/=node_modules/@defi-wonderland/isolmate/src/\",\":solady/=node_modules/solady/src/\",\":solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/\",\":uni-v3-core/=node_modules/@uniswap/v3-core/contracts/\",\":uni-v3-periphery/=node_modules/@uniswap/v3-periphery/contracts/\",\":unit-v2-periphery/=node_modules/@uniswap/v2-periphery/contracts/\"]},\"sources\":{\"solidity/interfaces/governance/IAmphoraProtocolToken.sol\":{\"keccak256\":\"0x3e268ce14ddeefb4857f6b07bbed0e97f29f086c088c730b660a0e3cfad25321\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c34c60175fe1e35047f8c6e848a576ebc3e1c1365f2ee96a1e37f97ed2a1542c\",\"dweb:/ipfs/QmfAjEE4MxDWmTgAXk6NfHZ1hJiGQiSb2t7w8eHxVSeJ7J\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AmphoraProtocolToken_InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmphoraProtocolToken_InvalidSupply"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dst",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/contracts/src/v0.8/",
        ":@contracts/=solidity/contracts/",
        ":@defi-wonderland/=node_modules/@defi-wonderland/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@interfaces/=solidity/interfaces/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@scripts/=solidity/scripts/",
        ":@test/=solidity/test/",
        ":@uniswap/=node_modules/@uniswap/",
        ":@uniswap/v2-periphery/=node_modules/@uniswap/v2-periphery/",
        ":@uniswap/v3-core/=node_modules/@uniswap/v3-core/",
        ":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":isolmate/=node_modules/@defi-wonderland/isolmate/src/",
        ":solady/=node_modules/solady/src/",
        ":solidity-utils/=node_modules/@defi-wonderland/solidity-utils/solidity/",
        ":uni-v3-core/=node_modules/@uniswap/v3-core/contracts/",
        ":uni-v3-periphery/=node_modules/@uniswap/v3-periphery/contracts/",
        ":unit-v2-periphery/=node_modules/@uniswap/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "solidity/interfaces/governance/IAmphoraProtocolToken.sol": "IAmphoraProtocolToken"
      },
      "libraries": {}
    },
    "sources": {
      "solidity/interfaces/governance/IAmphoraProtocolToken.sol": {
        "keccak256": "0x3e268ce14ddeefb4857f6b07bbed0e97f29f086c088c730b660a0e3cfad25321",
        "urls": [
          "bzz-raw://c34c60175fe1e35047f8c6e848a576ebc3e1c1365f2ee96a1e37f97ed2a1542c",
          "dweb:/ipfs/QmfAjEE4MxDWmTgAXk6NfHZ1hJiGQiSb2t7w8eHxVSeJ7J"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "solidity/interfaces/governance/IAmphoraProtocolToken.sol",
    "id": 53071,
    "exportedSymbols": {
      "IAmphoraProtocolToken": [
        53070
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:729:96",
    "nodes": [
      {
        "id": 53054,
        "nodeType": "PragmaDirective",
        "src": "32:23:96",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 53055,
        "nodeType": "PragmaDirective",
        "src": "56:33:96",
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 53070,
        "nodeType": "ContractDefinition",
        "src": "142:618:96",
        "nodes": [
          {
            "id": 53059,
            "nodeType": "ErrorDefinition",
            "src": "393:44:96",
            "documentation": {
              "id": 53057,
              "nodeType": "StructuredDocumentation",
              "src": "351:39:96",
              "text": "@notice Thrown when invalid address"
            },
            "errorSelector": "4db425ed",
            "name": "AmphoraProtocolToken_InvalidAddress",
            "nameLocation": "399:35:96",
            "parameters": {
              "id": 53058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "434:2:96"
            }
          },
          {
            "id": 53062,
            "nodeType": "ErrorDefinition",
            "src": "482:43:96",
            "documentation": {
              "id": 53060,
              "nodeType": "StructuredDocumentation",
              "src": "441:38:96",
              "text": "@notice Thrown when invalid supply"
            },
            "errorSelector": "3d8f597e",
            "name": "AmphoraProtocolToken_InvalidSupply",
            "nameLocation": "488:34:96",
            "parameters": {
              "id": 53061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:96"
            }
          },
          {
            "id": 53069,
            "nodeType": "FunctionDefinition",
            "src": "701:57:96",
            "functionSelector": "40c10f19",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "710:4:96",
            "parameters": {
              "id": 53067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53064,
                  "mutability": "mutable",
                  "name": "_dst",
                  "nameLocation": "723:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 53069,
                  "src": "715:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53066,
                  "mutability": "mutable",
                  "name": "_rawAmount",
                  "nameLocation": "737:10:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 53069,
                  "src": "729:18:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:34:96"
            },
            "returnParameters": {
              "id": 53068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:0:96"
            },
            "scope": 53070,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAmphoraProtocolToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 53056,
          "nodeType": "StructuredDocumentation",
          "src": "91:51:96",
          "text": "@title interface to interact with TokenDelgate"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          53070
        ],
        "name": "IAmphoraProtocolToken",
        "nameLocation": "152:21:96",
        "scope": 53071,
        "usedErrors": [
          53059,
          53062
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 96
}